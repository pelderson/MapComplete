name: Theme Validation and deployment
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: install deps
        run: npm ci
        shell: bash

      - name: create generated dir
        run: mkdir ./assets/generated
        shell: bash

      - name: create dependencies
        run: npm run generate:licenses; npm run generate:images; npm run generate:charging-stations; npm run generate:service-worker; npm run generate:editor-layer-index
        shell: bash

      - name: sync translations
        run: npm run generate:translations
        shell: bash

      - name: generate layeroverview
        run: npm run reset:layeroverview
        shell: bash

      - name: run tests
        run: npm run test
        shell: bash

      - name: Prepare deploy
        run: npm run prepare-deploy
        shell: bash

      - name: Clone deployment repo
        env:
          DEPLOY_KEY_PIETERVDVN: ${{ secrets.DEPLOY_KEY_PIETERVDVN }}
        run: |
          echo "Cloning destination repo"
          git config --global user.email "pietervdvn@posteo.net"
          git config --global user.name "pietervdvn"
          git clone --depth 1 --single-branch --branch main "https://x-access-token:$DEPLOY_KEY_PIETERVDVN@github.com/MapComplete/mapcomplete.github.io.git"
          echo "Destination repo is cloned"

      - name: Sync repo
        env:
          DEPLOY_KEY_PIETERVDVN: ${{ secrets.DEPLOY_KEY_PIETERVDVN }}
        run: |
          cd mapcomplete.github.io
          git pull

      - name: "Copying files"
        run: |
          echo "Deploying"
          rm -rf mapcomplete.github.io/*
          cp -r dist/* mapcomplete.github.io/
          cd mapcomplete.github.io/
          echo "mapcomplete.osm.be" > CNAME
          git add *
          if git status | grep -q "Changes to be committed"
          then
            git commit -am "Deploying a new version"
            git push
          else
            echo "No changes to commit"
          fi

